import{i as n,s as i,y as o}from"./7be7f637.js";import"./64d383a5.js";import"./33911560.js";var c=Object.defineProperty,h=(a,e,t)=>e in a?c(a,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):a[e]=t,l=(a,e,t)=>(h(a,typeof e!="symbol"?e+"":e,t),t);class r extends i{constructor(){super(),this.badgeNumber=5,this.badges=[],this.getSearchResults().then(e=>{this.badges=e})}async getSearchResults(e=""){const t=`/api/badge-catalog?search=${e}`;return await fetch(t).then(s=>s.ok?s.json():[]).then(s=>s)}async _handleSearchEvent(e){const t=e.detail.value;this.badges=await this.getSearchResults(t),console.log(t)}render(){return o` <search-bar @value-changed="${this._handleSearchEvent}"></search-bar> <div> Badges (${this.badgeNumber}) ${this.badges.map(e=>o` <badge-element titleIcon="${e.titleIcon}" title="${e.title}" paragraph="${e.paragraph}" author="${e.author}" timeToComplete="${e.timeToComplete}" collapseIcon="${e.collapseIcon}" opened="${e.opened}" stepsToComplete="${e.stepsToComplete}"></badge-element> `)} </div> `}}l(r,"properties",{badgeNumber:{type:String},badges:{type:Array}}),l(r,"styles",n``),customElements.define("badge-list",r);
